{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/SidePanel.js","components/App.js","components/Screen.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","SidePanel","onClick","togglePages","Component","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","currentScreen","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","Screen","page","setState","state","this","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAQe,SAASA,EAAOC,GAAQ,IAC7BC,EAA2CD,EAA3CC,SAAUC,EAAiCF,EAAjCE,YAAaC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAOtC,OACE,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,gBACZH,GAEH,kBAAC,aAAD,CACEI,eAVN,SAAsBC,EAAQC,EAAML,GAClCC,EAASD,IAULA,MAAOA,EACPE,UAAU,sBACVI,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMX,EACNY,MAAO,WACPC,aAAa,MC1BR,SAASC,EAAgBC,EAAKC,GAC3C,IAAMC,EAHO,aAGgBF,EAD4B,EAG/BG,oBAAS,WACjC,IAAMC,EAAYC,aAAaC,QAAQJ,GACvC,OAAiB,MAAbE,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBH,EACFA,IAEAA,KAV8C,mBAGlDd,EAHkD,KAG3CsB,EAH2C,KAkBzD,OAJAC,qBAAU,WACRL,aAAaM,QAAQT,EAAaK,KAAKK,UAAUzB,MAChD,CAACe,EAAaf,IAEV,CAACA,EAAOsB,G,ICpBII,E,uKAET,IAAD,OAEP,OACE,yBAAKxB,UAAU,aACb,yBAAKA,UAAU,gBAAf,iBACA,yBAAKA,UAAU,OAAOyB,QAAS,kBAAM,EAAK9B,MAAM+B,YAAY,UAA5D,cAGA,yBAAK1B,UAAU,OAAOyB,QAAS,kBAAM,EAAK9B,MAAM+B,YAAY,SAA5D,aAGA,yBAAK1B,UAAU,OAAOyB,QAAS,kBAAM,EAAK9B,MAAM+B,YAAY,QAA5D,iB,GAb+BC,aCwExBC,MArEf,SAAajC,GAAQ,IAAD,EACMe,EAAgB,OAAQ,IAD9B,mBACXmB,EADW,KACLC,EADK,OAEIpB,EAAgB,MAAO,IAF3B,mBAEXqB,EAFW,KAENC,EAFM,OAGEtB,EAAgB,KAAM,IAHxB,mBAGXuB,EAHW,KAGPC,EAHO,OAIUpB,mBAAS,IAJnB,mBAIXqB,EAJW,KAIHC,EAJG,KAKdC,EAAgB1C,EAAM0C,cACtBX,EAAc/B,EAAM+B,YAexB,OAdAL,qBAAU,WACR,IAAMiB,EAAUC,YAAW,WACzBH,EAAU,qCAAD,OAEGP,EAFH,qCAGIE,EAHJ,uCAIKE,EAJL,0CAOR,KAEH,OAAO,kBAAMO,aAAaF,MACzB,CAACT,EAAME,EAAKE,IAGb,oCACA,yBAAKjC,UAAU,WACT,iDAGJ,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAW0B,YAAaA,IACL,SAAlBW,GACC,kBAAC3C,EAAD,CACEE,SAAS,MACTC,YAAY,aACZC,MAAO+B,EACP9B,SAAU+B,IAIK,QAAlBO,GACC,kBAAC3C,EAAD,CACEE,SAAS,MACTC,YAAY,YACZC,MAAOiC,EACPhC,SAAUiC,IAGK,OAAlBK,GACC,kBAAC3C,EAAD,CACEE,SAAS,aACTC,YAAY,WACZC,MAAOmC,EACPlC,SAAUmC,KAIhB,yBAAKlC,UAAU,QACb,4BACEmC,OAAQA,EACRM,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,YCjEIC,E,kDACnB,aAAe,IAAD,8BACZ,gBAKFpB,YAAc,SAACqB,GACb,EAAKC,SAAS,CACZX,cAAeU,KANjB,EAAKE,MAAQ,CACXZ,cAAe,QAHL,E,qDAYZ,OACE,6BACE,kBAAC,EAAD,CACEA,cAAea,KAAKD,MAAMZ,cAC1BX,YAAawB,KAAKxB,mB,GAjBQC,aCGpCwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7ba26a2b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/mode/xml/xml\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/css/css\";\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\n\nexport default function Editor(props) {\n  const { language, displayName, value, onChange } = props;\n  //const [open, setOpen] = useState(true);\n\n  function handleChange(editor, data, value) {\n    onChange(value);\n  }\n\n  return (\n    <div className=\"editor-container\">\n      <div className=\"editor-title\">\n        {displayName}\n      </div>\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          theme: \"material\",\n          lineNumbers: true,\n        }}\n      />\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react'\n\nconst PREFIX = 'live-code-'\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key\n\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n    if (jsonValue != null) return JSON.parse(jsonValue)\n\n    if (typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}\n","import React, { Component, useState } from \"react\";\n\nexport default class SidePanel extends Component {\n  \n  render() {\n    \n    return (\n      <div className=\"sidePanel\">\n        <div className=\"editor-title\">File Explorer</div>\n        <div className=\"list\" onClick={() => this.props.togglePages(\"Html\")}>\n          index.html\n        </div>\n        <div className=\"list\" onClick={() => this.props.togglePages(\"Css\")}>\n          index.css\n        </div>\n        <div className=\"list\" onClick={() => this.props.togglePages(\"Js\")}>\n          index.js\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport Editor from \"./Editor\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport SidePanel from \"./SidePanel\";\n\nfunction App(props) {\n  const [html, setHtml] = useLocalStorage(\"html\", \"\");\n  const [css, setCss] = useLocalStorage(\"css\", \"\");\n  const [js, setJs] = useLocalStorage(\"js\", \"\");\n  const [srcDoc, setSrcDoc] = useState(\"\");\n  let currentScreen = props.currentScreen;\n  let togglePages = props.togglePages;\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `);\n    }, 300);\n\n    return () => clearTimeout(timeout);\n  }, [html, css, js]);\n\n  return (\n    <>\n    <div className=\"top-bar\">\n          <h1>Live Code Editor</h1>\n          \n        </div>\n      <div className=\"pane top-pane\">\n        <SidePanel togglePages={togglePages} />\n        {currentScreen === \"Html\" && (\n          <Editor\n            language=\"xml\"\n            displayName=\"index.html\"\n            value={html}\n            onChange={setHtml}\n          />\n        )}\n\n        {currentScreen === \"Css\" && (\n          <Editor\n            language=\"css\"\n            displayName=\"index.css\"\n            value={css}\n            onChange={setCss}\n          />\n        )}\n        {currentScreen === \"Js\" && (\n          <Editor\n            language=\"javascript\"\n            displayName=\"index.js\"\n            value={js}\n            onChange={setJs}\n          />\n        )}\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport App from \"./App\";\nexport default class Screen extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentScreen: \"Html\",\n    };\n  }\n  togglePages = (page) => {\n    this.setState({\n      currentScreen: page,\n    });\n  };\n  render() {\n    return (\n      <div>\n        <App\n          currentScreen={this.state.currentScreen}\n          togglePages={this.togglePages}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Screen from \"./components/Screen\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Screen />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}